within SOFCPoliMi;
package Types
  extends Modelica.Icons.TypesPackage;
  type Area = Modelica.Units.SI.Area(nominal = 10);
  type AreaSpecificReactionRate = Real(final unit = "mol/(s.m2)", nominal = 1e-3);
  type CoefficientOfHeatTransfer =
      Modelica.Units.SI.CoefficientOfHeatTransfer (                            nominal = 5000, min = 0);
  type CollisionIntegral = Real(final unit = "1", nominal = 1);
  type CpCoeff1 = Real(final unit = "J/(mol.K)");
  type CpCoeff2 = Real(final unit = "J/(mol.K2)");
  type CpCoeff3 = Real(final unit = "J/(mol.K3)");
  type CpCoeff4 = Real(final unit = "J/(mol.K4)");
  type CurrentDensity = Modelica.Units.SI.CurrentDensity(nominal = 1e2);
  type Density = Modelica.Units.SI.Density(nominal = 10, displayUnit = "kg/m3");
  type DerSpecEnergyByPressure = Real(final unit = "J.m.s2/kg2");
  type DerSpecEnergyByTemperature = Real(final unit = "J/(kg.K)", nominal = 1e3);
  type DerSpecificVolumeByComposition = Real(final unit = "J/(Pa.kg)", nominal = 1);
  type DerSpecificVolumeByPressure = Real(final unit = "m4.s2/kg2", nominal = 1e-10);
  type DerSpecificVolumeByTemperature = Real(final unit = "m3/(kg.K)", nominal = 2e-5);
  type DiffusionCoefficient = Modelica.Units.SI.DiffusionCoefficient(nominal = 1e-5);
  type DiffusionResistance = Real(final unit = "Ohm.m2", nominal = 1e-7);
  type DynamicViscosity = Modelica.Units.SI.DynamicViscosity(nominal = 1e-5);
  type Efficiency = Real(final quantity = "Efficiency", final unit = "1", min = 0);
  type ElCurrent = Modelica.Units.SI.ElectricCurrent(nominal = 1e-3);
  type ElPotential = Modelica.Units.SI.ElectricPotential(nominal = 1);
  type Emissivity = Modelica.Units.SI.Emissivity;
  type EnergyOfInteraction = Real(final unit = "K", nominal = 100);
  type HeatCapacity = Modelica.Units.SI.HeatCapacity(nominal = 1e3);
  type HeatFlowRate = Modelica.Units.SI.HeatFlowRate(nominal = 1e6);
  type InvMolarMass = Real(final unit = "mol/kg", nominal = 1e3);
  type Length = Modelica.Units.SI.Length(nominal = 1);
  type LowerHeatingValue = SpecificEnergy;
  type Mass = Modelica.Units.SI.Mass(nominal = 1e2);
  type MassFlowRate = Modelica.Units.SI.MassFlowRate(nominal = 100);
  type MassFraction = Modelica.Units.SI.MassFraction;
  type MolarEnergy = Modelica.Units.SI.MolarEnergy;
  type MolarEnthalpy = Modelica.Units.SI.MolarEnthalpy(nominal = 1);
  type MolarFlowRate = Modelica.Units.SI.MolarFlowRate(nominal = 1e-7);
  type MolarMass = Modelica.Units.SI.MolarMass(nominal = 0.0440095);
  type MoleFraction = Modelica.Units.SI.MoleFraction;
  type NusseltNumber = Modelica.Units.SI.NusseltNumber(nominal = 100);
  type PerUnit = Modelica.Units.SI.PerUnit;
  type Power = Modelica.Units.SI.Power(nominal = 1e7);
  type PreExponFactor = Real(final unit = "mol/(s.m2.Pa)", nominal = 1e-2);
  type Pressure = Modelica.Units.SI.Pressure(nominal = 1e7);
  type ResistanceArea = Real(final unit = "Ohm.m2");
  type SpecificConductivityArea = Real(final unit = "1/(Ohm.m2)");
  type SpecificConductivityLength = Real(final unit = "1/(Ohm.m)", nominal = 1e4);
  type SpecificEnergy = Modelica.Units.SI.SpecificEnergy(nominal = 1e4);
  type SpecificEnthalpy = SpecificEnergy;
  type SpecificEntropy = Modelica.Units.SI.SpecificEntropy(nominal = 5e2);
  type SpecificHeatCapacity = Modelica.Units.SI.SpecificHeatCapacity(nominal = 500);
  type SpecificHeatCapacityMol = Real(final unit = "J/(mol.K)");
  type SpecificMolarGibbsFreeEnergy = Modelica.Units.SI.MolarEnergy(nominal = 1e3);
  type SpecificVolume = Modelica.Units.SI.SpecificVolume(nominal = 0.01);
  type StephanBoltzmannConst = Real(final unit = "W/(m2.K4)");
  type Temperature = Modelica.Units.SI.Temperature(nominal = 500, displayUnit = "degC");
  type TemperatureDifference = Modelica.Units.SI.TemperatureDifference;
  type ThermalConductivity = Modelica.Units.SI.ThermalConductivity(nominal = 1e3);
  type Volume = Modelica.Units.SI.Volume(nominal = 10);
end Types;
